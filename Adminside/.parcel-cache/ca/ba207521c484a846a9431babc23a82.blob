var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _axios = require("axios");
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _react = require("react");
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _contextAuthContext = require("../../context/AuthContext");
  var _contextAuthContextDefault = _parcelHelpers.interopDefault(_contextAuthContext);
  var _Researcher = require("./Researcher");
  var _ResearcherDefault = _parcelHelpers.interopDefault(_Researcher);
  var _ResearcherEditor = require("./ResearcherEditor");
  var _ResearcherEditorDefault = _parcelHelpers.interopDefault(_ResearcherEditor);
  var _jsxFileName = "D:\\AF-ICAF\\Adminside\\components\\clients\\Researchers.jsx", _s = $RefreshSig$();
  function Researchers() {
    _s();
    const [researchers, setResearchers] = _react.useState([]);
    const [researcherEditorOpen, setResearcherEditorOpen] = _react.useState(false);
    const [editResearcherData, setEditResearcherData] = _react.useState(null);
    const {loggedIn} = _react.useContext(_contextAuthContextDefault.default);
    _react.useEffect(() => {
      if (!loggedIn) setResearchers([]); else getResearchers();
    }, [loggedIn]);
    async function getResearchers() {
      const researcherRes = await _axiosDefault.default.get(`http://localhost:5000/researcher/`);
      setResearchers(researcherRes.data);
    }
    function editResearcher(researcherData) {
      setEditResearcherData(researcherData);
      setResearcherEditorOpen(true);
    }
    function renderResearchers() {
      let sortedResearchers = [...researchers];
      sortedResearchers = sortedResearchers.sort((a, b) => {
        return new Date(b.createdAt) - new Date(a.createdAt);
      });
      return sortedResearchers.map((researcher, i) => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement(_ResearcherDefault.default, {
            key: i,
            researcher: researcher,
            getResearchers: getResearchers,
            editResearcher: editResearcher,
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 37,
              columnNumber: 17
            }
          })
        );
      });
    }
    return (
      /*#__PURE__*/_reactDefault.default.createElement("div", {
        className: "home",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 48,
          columnNumber: 9
        }
      }, !researcherEditorOpen && loggedIn && /*#__PURE__*/_reactDefault.default.createElement("button", {
        className: "btn-editor-toggle",
        onClick: () => setResearcherEditorOpen(true),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 50,
          columnNumber: 17
        }
      }, "Add researcher"), researcherEditorOpen && /*#__PURE__*/_reactDefault.default.createElement(_ResearcherEditorDefault.default, {
        setResearcherEditorOpen: setResearcherEditorOpen,
        getResearhcers: getResearchers,
        editResearcherData: editResearcherData,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 54,
          columnNumber: 17
        }
      }), researchers.length > 0 ? renderResearchers() : loggedIn && /*#__PURE__*/_reactDefault.default.createElement("p", {
        className: "no-users-msg",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 58,
          columnNumber: 19
        }
      }, "No researchers have been added yet."))
    );
  }
  _s(Researchers, "4akOLb0W9+lgeuBR68DmXtLVSbA=");
  _c = Researchers;
  exports.default = Researchers;
  var _c;
  $RefreshReg$(_c, "Researchers");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
