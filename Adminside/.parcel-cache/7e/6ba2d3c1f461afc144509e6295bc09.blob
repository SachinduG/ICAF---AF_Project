var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _NumberWidget = require('./NumberWidget');
  var _NumberWidgetDefault = _parcelHelpers.interopDefault(_NumberWidget);
  var _jsxFileName = "D:\\AF-ICAF\\Adminside\\components\\home\\NumberWidgetContainer.js";
  class NumberWidgetContainer extends _react.Component {
    constructor() {
      super();
      // Set initial state
      this.state = {
        loading: false,
        min: undefined,
        max: undefined,
        value: undefined
      };
      // Bind function to refer to component
      this.getData = this.getData.bind(this);
    }
    /*Fetch data when the component is added*/
    componentDidMount() {
      this.getData().then(_ => {
        // Re-fetch every minute
        this.interval = setInterval(this.getData, 60000);
      });
    }
    /*Fetch new data*/
    getData() {
      // Tell the Widget component we're currently loading
      this.setState({
        loading: true
      });
      // Fetch data
      return axios.get(this.props.href).then(response => {
        // Build a new state
        let newState = {
          loading: false
        };
        // Populate state with new data
        if (response.data.hasOwnProperty("min")) {
          newState["min"] = response.data.min;
        }
        if (response.data.hasOwnProperty("max")) {
          newState["max"] = response.data.max;
        }
        if (response.data.hasOwnProperty("value")) {
          newState["value"] = response.data.value;
        }
        // Update state with data
        this.setState(newState);
      }).catch(error => {
        // At least tell the Widget component we have stopped loading
        console.log(error);
        this.setState({
          loading: false
        });
      });
    }
    render() {
      return (
        /*#__PURE__*/
        // Render the number widget
        _reactDefault.default.createElement(_NumberWidgetDefault.default, {
          heading: this.props.heading,
          colspan: this.props.colspan,
          rowspan: this.props.rowspan,
          min: this.state.min,
          max: this.state.max,
          value: this.state.value,
          loading: this.state.loading,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 68,
            columnNumber: 13
          }
        })
      );
    }
  }
  // Enforce the type of props to send to this component
  NumberWidgetContainer.propTypes = {
    heading: _reactDefault.default.PropTypes.string,
    colspan: _reactDefault.default.PropTypes.number,
    rowspan: _reactDefault.default.PropTypes.number,
    href: _reactDefault.default.PropTypes.string.isRequired
  };
  exports.default = NumberWidgetContainer;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
