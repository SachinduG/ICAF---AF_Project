var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _componentsWidget = require('../components/Widget');
  var _componentsWidgetDefault = _parcelHelpers.interopDefault(_componentsWidget);
  var _componentsListDisplay = require('../components/ListDisplay');
  var _componentsListDisplayDefault = _parcelHelpers.interopDefault(_componentsListDisplay);
  var _componentsListItem = require('../components/ListItem');
  var _componentsListItemDefault = _parcelHelpers.interopDefault(_componentsListItem);
  require('../styles/ListWidget.css');
  var _jsxFileName = "D:\\AF-ICAF\\Adminside\\components\\home\\ListWidget.js";
  class ListWidget extends _react.Component {
    // Sort items in descending order
    sortListItems() {
      return this.props.listItems.slice().sort((a, b) => {
        if (a.value > b.value) {
          return -1;
        } else if (a.value < b.value) {
          return 1;
        }
        return 0;
      });
    }
    /*Decide whether to show widget*/
    showWidget() {
      let sortedItems = this.sortListItems();
      // Show loading indicator while initial data is being fetched
      if (this.props.listItems.length === 0) {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("p", {
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 30,
              columnNumber: 20
            }
          }, "Loading...")
        );
      }
      // Get min/max values for progress bar
      let min = 0;
      let max = sortedItems[0].value;
      return (
        /*#__PURE__*/_reactDefault.default.createElement(_componentsListDisplayDefault.default, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 37,
            columnNumber: 16
          }
        }, sortedItems.map((item, index) => /*#__PURE__*/_reactDefault.default.createElement(_componentsListItemDefault.default, {
          key: item.label,
          label: item.label,
          value: item.value,
          min: min,
          max: max,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 39,
            columnNumber: 47
          }
        })))
      );
    }
    render() {
      return (
        /*#__PURE__*/
        // Wrap the list display component in the generic wrapper
        _reactDefault.default.createElement(_componentsWidgetDefault.default, {
          heading: this.props.heading,
          colspan: this.props.colspan,
          rowspan: this.props.rowspan,
          loading: this.props.loading,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 46,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "ListWidget",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 47,
            columnNumber: 17
          }
        }, this.showWidget()))
      );
    }
  }
  // Enforce the type of props to send to this component
  ListWidget.propTypes = {
    heading: _reactDefault.default.PropTypes.string,
    colspan: _reactDefault.default.PropTypes.number,
    rowspan: _reactDefault.default.PropTypes.number,
    loading: _reactDefault.default.PropTypes.bool.isRequired,
    listItems: _reactDefault.default.PropTypes.arrayOf(_reactDefault.default.PropTypes.object)
  };
  exports.default = ListWidget;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
